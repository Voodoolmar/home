@using Comments
@using Models
@using SeoBiz.Cms.Comments
@using SeoBiz.Cms.Posts
@using Comment = Comments.Comment
@inject IPostService PostService;
@inject ICommentService CommentService;
@{
    Layout = "_Layout";
}

@RenderSection("PageTitle", false)

<section id="page-content" class="sidebar-right pt-40">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-9 main-content">
                <div class="blog-detail">
                    <!--Blog Classic2 Item -->
                    @RenderBody()
                    <!--Blog Classic2 Item End-->

                    @*<div class="detail-info">
                        Posted by <a href="#" title="admin" class="color-accent">admin</a> 
                        <span class="sep">|</span> 
                        Posted at February 14,2017 
                        <span class="sep">|</span> 
                        Categories: <a href="#" title="admin">Design</a>,<a href="#" title="admin">Web</a>
                    </div>*@
                    <div class="detail-social">
                        Поделиться: 
                        <script src="//yastatic.net/es5-shims/0.0.2/es5-shims.min.js"></script>
                        <script src="//yastatic.net/share2/share.js"></script>
                        <div class="ya-share2" data-services="vkontakte,facebook,odnoklassniki,moimir,twitter,viber,whatsapp,telegram"></div>
                    </div>
                    
                    @*<div class="detail-port-nav">
                        <a class="nav-prev" href="#">
                            <span class="fa fa-chevron-left2"></span> Previous
                        </a> 
                        <a class="nav-next" href="#">Next 
                            <span class="fa fa-chevron-right2"></span>
                        </a>
                    </div>*@
                    

                    <!--Detail Recent -->
                    @if (!string.IsNullOrEmpty((string) ViewData["CategoryId"]))
                    {
                        var relatedPostPage = await PostService.GetPage(new PostListFilter
                        {
                            Limit = 2,
                            Published = true,
                            WithoutBody = true,
                            CategoryIds = new[] {(string) ViewData["CategoryId"]}
                        });
                        var relatedPosts = relatedPostPage.Items.Take(relatedPostPage.Items.Count - (relatedPostPage.Items.Count % 2)).ToArray();
                        if (relatedPosts.Any())
                        {
                            
                            <h4 class="detail-heading">Вам также может быть интересно</h4>
                            <ul class="detail-recent">

                                @foreach (var article in relatedPosts)
                                {
                                    <li>
                                        <div class="pic"> <img src="/images/middle/@article.Image" alt="@article.Title"> </div>
                                        <div class="box-right">
                                            @{
                                                var url = "/Post/" + article.Id;
                                            }
                                            <div class="title"><a href="@url" title="@article.Title">@article.Title</a></div>
                                            <div class="info">
                                                
                                                <span class="fa fa-eye" title="Количество просмотров"></span>
                                                <span title="Количество просмотров">@article.ViewCount</span>

                                                <span class="sep"></span>

                                                <span class="fa fa-bubble-dots" title="Коментариев"></span>
                                                @{  
                                                    var commentUrl = url + "#comments";
                                                }
                                                <a href="@commentUrl" title="Коментариев">@article.CommentCount</a>
                                            </div>
                                            <p>@article.Description</p>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                    }
                    <!--Detail Recent End -->
                    <!--Detail Comments -->
                    @{ var comments = await CommentService.GetList(new CommentFilter
        {
            PostId = (string)ViewData["postId"],
            States = (bool)ViewData["authenticated"] ? new[] { CommentState.Approved, CommentState.Replied, CommentState.New } : new[] { CommentState.Approved, CommentState.Replied }
        });
                    }
                    @Html.Partial("Comments/Index", new Comments.IndexModel(comments))
                    <!--Detail Comments End-->
                    <!--Detail Message -->
                    @Html.Partial("Comments/Post", new Comments.PostModel(null) { Comment = new Comment { PostId = (string)ViewData["postId"] } })
                    <!--Detail Message End-->
                </div>
                <div class="pb-60"></div>
            </div>
            <div class="col-sm-12 col-md-3 sidebar">
                <div class="blog-sidebar-content">
                    <div class="widget-posts-box">
                        <h2 class="widget-title">Свежие статьи</h2>
                        <ul class="widget-posts">
                            @{
                                var posts = await PostService.GetPage(new PostListFilter
                                {
                                    Limit = 3,
                                    Published = true,
                                    WithoutBody = true
                                });



                                var recent = posts.Items.Select(x => new RecentArticlePreview(x)).ToArray();
                            }
                            @foreach (var article in recent)
                            {
                                Html.RenderPartial("Category/_RecentArticlePreview", article);
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    @RenderSection("Scripts", required: false)
}